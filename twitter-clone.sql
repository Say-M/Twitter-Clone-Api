
-- CREATE DATABASE "Twitter-Clone";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp"; -- This will create uuid

CREATE TABLE IF NOT EXISTS "users" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	username VARCHAR(15) UNIQUE NOT NULL,
	firstName VARCHAR(12) NOT NULL,
	lastName VARCHAR(12) NOT NULL,
	email VARCHAR(255) UNIQUE NOT NULL CHECK(email = LOWER(email) AND POSITION('@' IN email) > 0),
	password VARCHAR(255) NOT NULL,
	bio VARCHAR(255),
	"createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "tweets" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	"userId" UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
	content VARCHAR(280) NOT NULL,
	"createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "retweets" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	"userId" UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
	"tweetId" UUID NOT NULL REFERENCES tweets(id) ON DELETE CASCADE,
	"createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "comments" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	"commentId" UUID REFERENCES comments(id) ON DELETE CASCADE,
	"userId" UUID NOT NULL REFERENCES users(id),
	"tweetId" UUID NOT NULL REFERENCES tweets(id) ON DELETE CASCADE CHECK("retweetId" IS NULL),
	"retweetId" UUID NOT NULL REFERENCES tweets(id) ON DELETE CASCADE CHECK("tweetId" IS NULL),
	content VARCHAR(280) NOT NULL,
	"createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "likes" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	"userId" UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
	"tweetId" UUID REFERENCES tweets(id) ON DELETE CASCADE CHECK("retweetId" IS NULL AND "commentId" IS NULL),
	"retweetId" UUID REFERENCES tweets(id) ON DELETE CASCADE CHECK("tweetId" IS NULL AND "commentId" IS NULL),
	"commentId" UUID REFERENCES comments(id) ON DELETE CASCADE CHECK("tweetId" IS NULL AND "retweetId" IS NULL)
);

CREATE TABLE IF NOT EXISTS "followers" (
	id UUID UNIQUE DEFAULT uuid_generate_v4() PRIMARY KEY,
	"senderId" UUID REFERENCES users(id) ON DELETE CASCADE,
	"receiverId" UUID REFERENCES users(id) ON DELETE CASCADE,
	status BOOLEAN DEFAULT FALSE,
	"createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	"updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);